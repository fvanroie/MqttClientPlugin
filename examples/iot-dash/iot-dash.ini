[Rainmeter]
Update=1000
Background=#@#Background.png
BackgroundMode=3
BackgroundMargins=0,34,0,14

[Metadata]
Name=IoT Dashboard
Author=Jos Zuijderwijk
Information=An illustro based skin that functions as an interactive dashboard for your IoT devices.
Version=1.1
License=Creative Commons Attribution - Non - Commercial - Share Alike 3.0

[Variables]
fontName=Trebuchet MS
textSize=8
; Used colors
colorText=255,255,255,205
colorOnline=60,255,60,255
colorOffline=255,60,60,255
colorDisabled=105,105,105,105
colorActive=60,60,255,255
; States
stateBell=#colorDisabled#
stateCoffee=#colorDisabled#
stateCoffeeButton=#colorDisabled#
stateBubble=#colorDisabled#
isConnected=0


; TODO
[mqttServer]
Measure=Plugin
Plugin=MqttClient
Server= ; TODO: fill in
Port=1883
Username=; TODO: fill in
Password=; TODO: fill in
; Update the meter when the client (dis)connects:
OnConnect=[!SetVariable isConnected 1][!Update][!Redraw]
OnDisconnect=[!SetVariable isConnected 0][!Update][!Redraw]
; Update the meter as soon as a message arrives:
OnMessage=[!Update][!Redraw]

; ----------------------------------
; mqttTOPICS
; ----------------------------------

[ConnectionMeasure]
Measure=Calc
Formula=#isConnected#
DynamicVariables=1

[mqttTopicBell]
Measure=Plugin
Plugin=MqttClient
ParentName=mqttServer
Topic=connection/bell

; This section changes the state
; It also determines the click behaviour
IfCondition = (mqttTopicBell = 1)
IfTrueAction = [!SetVariable stateBell #colorOnline#] [!SetOption meterBell LeftMouseUpAction "[!CommandMeasure mqttServer Publish(bell/input,tring)]"]
IfFalseAction = [!SetVariable stateBell  #colorOffline#] [!SetOption meterBell LeftMouseUpAction ""]
; 
IfCondition2 = (ConnectionMeasure = 0)
IfTrueAction2 = [!SetVariable stateBell  #colorDisabled#] [!SetOption meterBell LeftMouseUpAction ""]
IfConditionMode=1

[mqttTopicBubbles]
Measure=Plugin
Plugin=MqttClient
ParentName=mqttServer
Topic=bubbles/connection

; This section changes the state
IfCondition = (mqttTopicBubbles = 1)
IfTrueAction= [!SetVariable stateBubble  #colorOnline#] [!SetOption meterBubble LeftMouseUpAction "[!CommandMeasure mqttServer Publish(bridge/bubbles/start,1,0,1)]"]
IfFalseAction = [!SetVariable stateBubble  #colorOffline#] [!SetOption meterBubble LeftMouseUpAction ""]

IfCondition2 = (ConnectionMeasure = 0)
IfTrueAction2 = [!SetVariable stateBubble  #colorDisabled#] [!SetOption meterBubble LeftMouseUpAction ""]
IfConditionMode=1

[mqttTopicBubblesState]
Measure=Plugin
Plugin=MqttClient
ParentName=mqttServer
Topic=bubbles/status

IfCondition = (mqttTopicBubblesState = 1)
IfTrueAction= [!SetVariable stateBubble  #colorActive#] [!SetOption meterBubble LeftMouseUpAction "[!CommandMeasure mqttServer Publish(bridge/bubbles/start,0,0,1)]"]
IfConditionMode=1

[mqttTopicCoffee]
Measure=Plugin
Plugin=MqttClient
ParentName=mqttServer
Topic=coffee/connection

; This section changes the state
IfCondition = (mqttTopicCoffee = 1)
IfTrueAction = [!SetVariable stateCoffee  #colorOnline#] [!SetOption meterCoffee LeftMouseUpAction "[!CommandMeasure mqttServer Publish(bridge/coffee/status,1,0,1)]"]
IfFalseAction = [!SetVariable stateCoffee  #colorOffline#] [!SetOption meterCoffee LeftMouseUpAction ""]

IfCondition2 = (ConnectionMeasure = 0)
IfTrueAction2 = [!SetVariable stateCoffee  #colorDisabled#] [!SetOption meterCoffee LeftMouseUpAction ""]
IfConditionMode=1

[mqttTopicCoffeeState]
Measure=Plugin
Plugin=MqttClient
ParentName=mqttServer
Topic=coffee/status

IfCondition = (mqttTopicCoffeeState = 1)
IfTrueAction= [!SetVariable stateCoffee  #colorActive#] [!SetOption meterCoffee LeftMouseUpAction "[!CommandMeasure mqttServer Publish(bridge/coffee/status,0,0,1)]"]
IfConditionMode=1

[mqttTopicCoffeeButton]
Measure=Plugin
Plugin=MqttClient
ParentName=mqttServer
Topic=coffee/button/connection

; This section changes the state
IfCondition = (mqttTopicCoffeeButton = 1)
IfTrueAction = [!SetVariable stateCoffeeButton  #colorOnline#]
IfFalseAction = [!SetVariable stateCoffeeButton  #colorOffline#]

IfCondition2 = (ConnectionMeasure = 0)
IfTrueAction2 = [!SetVariable stateCoffeeButton  #colorDisabled#]
IfConditionMode=1

; ----------------------------------
; STYLES are used to "centralize" options
; ----------------------------------

[styleTitle]
StringAlign=Center
StringCase=Upper
StringStyle=Bold
StringEffect=Shadow
FontEffectColor=0,0,0,50
FontColor=#colorText#
FontFace=#fontName#
FontSize=10
AntiAlias=1
ClipString=1

[styleLeftText]
StringAlign=Left
; Meters using styleLeftText will be left-aligned.
StringCase=None
StringStyle=Bold
StringEffect=Shadow
FontEffectColor=0,0,0,20
FontColor=#colorText#
FontFace=#fontName#
FontSize=#textSize#
AntiAlias=1
ClipString=1

[styleRightText]
StringAlign=Right
StringCase=None
StringStyle=Bold
StringEffect=Shadow
FontEffectColor=0,0,0,20
FontColor=#colorText#
FontFace=#fontName#
FontSize=#textSize#
AntiAlias=1
ClipString=1


; ----------------------------------
; METERS display images, text, bars, etc.
; ----------------------------------

[meterTitle]
Meter=String
MeterStyle=styleTitle
X=100
Y=12
W=190
H=18
Text=IoT Dashboard

[meterBell]
Meter=String
MeterStyle=styleLeftText
X=10
Y=40
W=190
H=14
Text=Bell

[meterBellValue]
Meter=Shape
Shape=Ellipse 0,5,5 | Fill Color #stateBell# | StrokeWidth 0.5 | Stroke Color 0,0,0,60
X = 190
Y = 0r
DynamicVariables=1


[meterBubble]
Meter=String
MeterStyle=styleLeftText
X=10
Y=60
W=190
H=14
Text=Bubble Machine

[meterBubbleValue]
Meter=Shape
Shape=Ellipse 0,5,5 | Fill Color #stateBubble# | StrokeWidth 0.5 | Stroke Color 0,0,0,60
X = 190
Y = 0r
DynamicVariables=1

[meterCoffeeButton]
Meter=String
MeterStyle=styleLeftText
X=10
Y=80
W=190
H=14
Text=Coffee Button

[meterCoffeeButtonValue]
Meter=Shape
Shape=Ellipse 0,5,5 | Fill Color #stateCoffeeButton# | StrokeWidth 0.5 | Stroke Color 0,0,0,60
X = 190
Y = 0r
DynamicVariables=1

[meterCoffee]
Meter=String
MeterStyle=styleLeftText
X=10
Y=100
W=190
H=14
Text=Coffee Machine

[meterCoffeeValue]
Meter=Shape
Shape=Ellipse 0,5,5 | Fill Color #stateCoffee# | StrokeWidth 0.5 | Stroke Color 0,0,0,60
X = 190
Y = 0r
DynamicVariables=1